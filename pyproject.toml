# SPDX-FileCopyrightText: 2020 - 2025 CERN
# SPDX-FileCopyrightText: 2023 - 2025 GSI Helmholtzzentrum für Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'pip >= 23',
    'setuptools >= 60',
    'setuptools-scm[toml] >= 8.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-extremum-seeking'
authors = [
    {name = 'Penny Madysa', email = 'penny.madysa@cern.ch'},
    {name = 'Verena Kain', email = 'verena.kain@cern.ch'},
]
maintainers = [
    {name = 'Penny Madysa', email = 'penny.madysa@cern.ch'},
]
description = "Scheinker's extremum seeking algorithm as an optimizer"
readme = 'README.md'
license = {file='COPYING'}
requires-python = '>=3.9'
dependencies = [
    'numpy >= 1.23',
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'License :: Other/Proprietary License',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
]

[project.optional-dependencies]
# If you update these dependencies, also update
# .pre-commit-config.yaml/mypy/additional_dependencies.
examples = [
    'cernml-coi ~= 0.9.0',
    'cernml-coi-utils[matplotlib] ~= 0.3.0',
    'typing-extensions',
]
doc = [
    'Sphinx >= 7.1',
    'python-docs-theme',
    'importlib-metadata; python_version<"3.10"',
    'typing-extensions; python_version<"3.10"',
]
test = [
    'pytest',
    'pytest-cov',
]
lint = [
    'cernml-extremum-seeking[examples,doc,test]',
    'types-docutils',
    'typing-extensions; python_version<"3.10"',
]

[project.urls]
gitlab = 'https://gitlab.cern.ch/geoff/optimizers/cernml-extremum-seeking'
wiki = 'https://wikis.cern.ch/pages/viewpage.action?pageId=194741479'

[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = 'black'

[tool.pytest.ini_options]
addopts = '''
    --doctest-modules
    --doctest-glob="*.rst"
    --ignore=docs/conf.py
'''
testpaths = ['docs', 'src', 'tests']

[tool.coverage.run]
source = ['src']
branch = true

[tool.coverage.report]
exclude_also = [
    '^\s*@.*\boverload$',
    '^\s*def __del__',
    '^\s*except ImportError:$',
    '^\s*from .* import',
    '^\s*if .*\bTYPE_CHECKING:$',
    '^\s*if sys\.version_info ..? \(\d, \d+\):$',
    '^\s*import ',
    '^\s*raise NotImplementedError',
]

[tool.ruff]
fix = true
src = ['examples', 'src', 'test']
target-version = 'py39'

[tool.ruff.lint]
extend-select = [
    'A', 'ARG', 'ASYNC', 'B', 'C4', 'C90', 'COM818', 'D', 'DTZ', 'EXE', 'FLY',
    'I', 'ICN', 'ISC', 'NPY', 'PD', 'PERF', 'PGH', 'PIE', 'PLR5501', 'PT',
    'PTH', 'PYI', 'RET', 'RSE', 'RUF', 'SIM', 'SLOT', 'T10', 'TRY', 'UP',
]
ignore = [
    'D105',   # Missing docstring in magic method
    'D107',   # Missing docstring in __init__
    'D417',   # Missing argument description in the docstring
    'ISC001', # Implicit string concatenation, conflicts with autoformat
    'RUF012', # Mutable class attributes should use `typing.ClassVar`
              # TODO Waiting for Gymnasium#951 to get fixed.
    'TRY003', # Avoid specifying long messages outside the exception class
]
# Allow non-breaking space and en-dash in docstrings.
allowed-confusables = [' ', '–', '×']
flake8-pytest-style.fixture-parentheses = false
isort.split-on-trailing-comma = true
pycodestyle.max-doc-length = 72
pydocstyle.convention = 'google'
pydocstyle.ignore-decorators = ['overload', 'overrides']

[tool.ruff.lint.per-file-ignores]
'**/{tests,docs}/*' = ['A001', 'ARG', 'D', 'INP']

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = [
    '$MYPY_CONFIG_FILE_DIR/src',
    '$MYPY_CONFIG_FILE_DIR/examples',
    '$MYPY_CONFIG_FILE_DIR/tests',
]

[tool.pylint.reports]
output-format = 'parseable'
reports = false
score = false

[tool.pylint.'messages control']
disable = [
    'duplicate-code',
    'fixme',
    'line-too-long',
    'too-many-arguments',
]
