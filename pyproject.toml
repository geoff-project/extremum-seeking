# SPDX-FileCopyrightText: 2020-2023 CERN
# SPDX-FileCopyrightText: 2023 GSI Helmholtzzentrum fÃ¼r Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'pip >= 23',
    'setuptools >= 60',
    'setuptools-scm[toml] >= 8.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-extremum-seeking'
authors = [
    {name = 'Nico Madysa', email = 'nico.madysa@cern.ch'},
    {name = 'Verena Kain', email = 'verena.kain@cern.ch'},
]
maintainers = [
    {name = 'Nico Madysa', email = 'nico.madysa@cern.ch'},
]
description = "Scheinker's extremum seeking algorithm as an optimizer"
readme = 'README.md'
license = {text='Other/Proprietary License'}
requires-python = '>=3.9'
dependencies = [
    'numpy ~= 1.23',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'License :: Other/Proprietary License',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
]

[project.optional-dependencies]
# If you update these dependencies, also update
# .pre-commit-config.yaml/mypy/additional_dependencies.
examples = [
    'cernml-coi ~= 0.8.0',
    'cernml-coi-utils[matplotlib] ~= 0.2.0',
]
doc = [
    'Sphinx >= 7.1',
    'importlib-metadata; python_version<"3.10"',
]
test = [
    'pytest',
    'pytest-cov',
]
lint = [
    'cernml-extremum-seeking[examples,doc,test]',
    'types-docutils',
]

[project.urls]
gitlab = 'https://gitlab.cern.ch/geoff/optimizers/cernml-extremum-seeking'
wiki = 'https://wikis.cern.ch/pages/viewpage.action?pageId=194741479'

[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = 'black'

[tool.pytest.ini_options]
addopts = '--doctest-modules'
testpaths = ['src', 'tests']

[tool.coverage.run]
source = ['src']
branch = true

[tool.coverage.report]
exclude_also = [
    '^\s*from .* import',
    '^\s*import ',
    '^\s*except ImportError:$',
    'def __del__',
    'if .*\.TYPE_CHECKING',
    'raise NotImplementedError',
]

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = [
    '$MYPY_CONFIG_FILE_DIR/src',
    '$MYPY_CONFIG_FILE_DIR/examples',
    '$MYPY_CONFIG_FILE_DIR/tests',
]

[[tool.mypy.overrides]]
module = ['gym.*']
ignore_missing_imports = true

[tool.pylint.reports]
output-format = 'parseable'
reports = false
score = false

[tool.pylint.'messages control']
disable = [
    'duplicate-code',
    'fixme',
    'too-many-arguments',
]
